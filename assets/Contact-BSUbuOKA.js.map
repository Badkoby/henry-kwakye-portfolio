{"version":3,"file":"Contact-BSUbuOKA.js","sources":["../../src/utils/emailService.ts","../../src/pages/Contact.tsx"],"sourcesContent":["// Environment configuration for EmailJS\r\nexport const emailJSConfig = {\r\n  serviceId: import.meta.env.VITE_EMAILJS_SERVICE_ID || '',\r\n  templateId: import.meta.env.VITE_EMAILJS_TEMPLATE_ID || '',\r\n  publicKey: import.meta.env.VITE_EMAILJS_PUBLIC_KEY || '',\r\n};\r\n\r\n// Check if EmailJS is properly configured\r\nexport const isEmailJSConfigured = () => {\r\n  return !!(emailJSConfig.serviceId && emailJSConfig.templateId && emailJSConfig.publicKey);\r\n};\r\n\r\n// Email template configuration\r\nexport const createEmailTemplate = (formData: {\r\n  name: string;\r\n  email: string;\r\n  subject: string;\r\n  message: string;\r\n  projectType?: string;\r\n}) => ({\r\n  from_name: formData.name,\r\n  from_email: formData.email,\r\n  subject: formData.subject,\r\n  message: formData.message,\r\n  project_type: formData.projectType || 'Not specified',\r\n  to_name: 'Henry Kwakye',\r\n  reply_to: formData.email,\r\n});\r\n\r\n// Form validation utilities\r\nexport const validateForm = (formData: {\r\n  name: string;\r\n  email: string;\r\n  subject: string;\r\n  message: string;\r\n}) => {\r\n  const errors: Record<string, string> = {};\r\n\r\n  if (!formData.name.trim()) {\r\n    errors.name = 'Name is required';\r\n  } else if (formData.name.trim().length < 2) {\r\n    errors.name = 'Name must be at least 2 characters';\r\n  }\r\n\r\n  if (!formData.email.trim()) {\r\n    errors.email = 'Email is required';\r\n  } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n    errors.email = 'Please enter a valid email address';\r\n  }\r\n\r\n  if (!formData.subject.trim()) {\r\n    errors.subject = 'Subject is required';\r\n  } else if (formData.subject.trim().length < 5) {\r\n    errors.subject = 'Subject must be at least 5 characters';\r\n  }\r\n\r\n  if (!formData.message.trim()) {\r\n    errors.message = 'Message is required';\r\n  } else if (formData.message.trim().length < 10) {\r\n    errors.message = 'Message must be at least 10 characters';\r\n  } else if (formData.message.trim().length > 1000) {\r\n    errors.message = 'Message must be less than 1000 characters';\r\n  }\r\n\r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Alert,\r\n  Chip,\r\n  CircularProgress,\r\n  Paper,\r\n  Divider,\r\n  Stack\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { styled } from '@mui/material/styles';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport { GradientText } from '../components/StyledComponents';\r\nimport { useToast } from '../context/ToastContext';\r\nimport { validateForm, isEmailJSConfigured, createEmailTemplate } from '../utils/emailService';\r\n\r\n// Styled components\r\nconst ContactCard = styled(Card)(({ theme }) => ({\r\n  background: `linear-gradient(135deg, ${theme.palette.background.paper} 0%, rgba(25, 118, 210, 0.05) 100%)`,\r\n  borderRadius: 16,\r\n  boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  backdropFilter: 'blur(10px)',\r\n  transition: 'all 0.3s ease',\r\n  '&:hover': {\r\n    transform: 'translateY(-5px)',\r\n    boxShadow: '0 20px 40px rgba(0, 0, 0, 0.15)',\r\n  },\r\n}));\r\n\r\nconst ContactInfoCard = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  borderRadius: 16,\r\n  background: `linear-gradient(135deg, ${theme.palette.background.paper} 0%, rgba(25, 118, 210, 0.03) 100%)`,\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: theme.spacing(2),\r\n  transition: 'all 0.3s ease',\r\n  '&:hover': {\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 8px 24px rgba(0, 0, 0, 0.1)',\r\n  },\r\n}));\r\n\r\nconst projectTypes = [\r\n  'Data Analysis',\r\n  'Machine Learning',\r\n  'Web Development',\r\n  'Agricultural Tech',\r\n  'Business Intelligence',\r\n  'Other'\r\n];\r\n\r\ninterface FormData {\r\n  name: string;\r\n  email: string;\r\n  subject: string;\r\n  message: string;\r\n  projectType: string;\r\n}\r\n\r\nconst Contact: React.FC = () => {\r\n  const [formData, setFormData] = useState<FormData>({\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: '',\r\n    projectType: ''\r\n  });\r\n    const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const { showToast } = useToast();\r\n\r\n  const isConfigured = isEmailJSConfigured();\r\n\r\n  const handleInputChange = (field: keyof FormData) => (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const value = event.target.value;\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent) => {\r\n    event.preventDefault();    const validation = validateForm(formData);\r\n    if (!validation.isValid) {\r\n      setErrors(validation.errors);\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      if (isConfigured) {\r\n        // Import emailjs dynamically only if configured\r\n        const emailjs = await import('@emailjs/browser');\r\n        const emailJSConfig = {\r\n          serviceId: import.meta.env.VITE_EMAILJS_SERVICE_ID,\r\n          templateId: import.meta.env.VITE_EMAILJS_TEMPLATE_ID,\r\n          publicKey: import.meta.env.VITE_EMAILJS_PUBLIC_KEY,\r\n        };\r\n        \r\n        const templateParams = createEmailTemplate(formData);\r\n        \r\n        await emailjs.send(\r\n          emailJSConfig.serviceId,\r\n          emailJSConfig.templateId,\r\n          templateParams,\r\n          emailJSConfig.publicKey\r\n        );\r\n        \r\n        showToast('Message sent successfully! I\\'ll get back to you soon.', 'success');\r\n      } else {\r\n        // Demo mode - simulate success\r\n        await new Promise(resolve => setTimeout(resolve, 1500));        showToast('Demo mode: Message would be sent successfully!', 'info');\r\n      }\r\n      \r\n      setFormData({\r\n        name: '',\r\n        email: '',\r\n        subject: '',\r\n        message: '',\r\n        projectType: ''\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Contact form error:', error);\r\n      showToast('Failed to send message. Please try again or use alternative contact methods.', 'error');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const contactInfo = [\r\n    {\r\n      icon: <EmailIcon />,\r\n      label: 'Email',\r\n      value: 'henry.kwakye@example.com',\r\n      href: 'mailto:henry.kwakye@example.com'\r\n    },\r\n    {\r\n      icon: <PhoneIcon />,\r\n      label: 'Phone',\r\n      value: '+1 (555) 123-4567',\r\n      href: 'tel:+15551234567'\r\n    },\r\n    {\r\n      icon: <LinkedInIcon />,\r\n      label: 'LinkedIn',\r\n      value: 'linkedin.com/in/henry-kwakye',\r\n      href: 'https://linkedin.com/in/henry-kwakye'\r\n    },    {\r\n      icon: <GitHubIcon />,\r\n      label: 'GitHub',\r\n      value: 'github.com/henry-kwakye',\r\n      href: 'https://github.com/henry-kwakye'\r\n    },\r\n    {\r\n      icon: <LocationOnIcon />,\r\n      label: 'Location',\r\n      value: 'Ghana',\r\n      href: null\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.8 }}\r\n      >\r\n        {/* Header */}\r\n        <Box textAlign=\"center\" mb={6}>\r\n          <Typography variant=\"h1\" gutterBottom>\r\n            <GradientText sx={{ \r\n              fontSize: { xs: '3rem !important', md: '4rem !important' },\r\n              lineHeight: { xs: '3.5rem', md: '4.5rem' }\r\n            }}>\r\n              Get In Touch\r\n            </GradientText>\r\n          </Typography>\r\n          <Typography variant=\"h5\" color=\"text.secondary\" sx={{ mb: 4, fontWeight: 300 }}>\r\n            Let's discuss how data can transform your agricultural operations\r\n          </Typography>\r\n          \r\n          {/* Service Status */}\r\n          <Box mb={4}>\r\n            <Chip\r\n              icon={isConfigured ? <CheckCircleIcon /> : <ErrorIcon />}\r\n              label={isConfigured ? \"Email Service Active\" : \"Demo Mode\"}\r\n              color={isConfigured ? \"success\" : \"warning\"}\r\n              variant=\"outlined\"\r\n              sx={{ fontSize: '0.9rem', py: 1 }}\r\n            />\r\n          </Box>\r\n        </Box>        <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 4 }}>\r\n          {/* Contact Form */}\r\n          <Box sx={{ flex: { xs: 1, md: '7' } }}>\r\n            <ContactCard>\r\n              <CardContent sx={{ p: 4 }}>\r\n                <Typography variant=\"h4\" gutterBottom color=\"primary\">\r\n                  Send a Message\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n                  I'd love to hear about your project and how I can help you leverage data for better results.\r\n                </Typography>\r\n\r\n                <Box component=\"form\" onSubmit={handleSubmit}>\r\n                  <Stack spacing={3}>\r\n                    <Box sx={{ display: 'flex', flexDirection: { xs: 'column', sm: 'row' }, gap: 3 }}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Your Name\"\r\n                        value={formData.name}\r\n                        onChange={handleInputChange('name')}\r\n                        error={!!errors.name}\r\n                        helperText={errors.name}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleInputChange('email')}\r\n                        error={!!errors.email}\r\n                        helperText={errors.email}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Box>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Subject\"\r\n                      value={formData.subject}\r\n                      onChange={handleInputChange('subject')}\r\n                      error={!!errors.subject}\r\n                      helperText={errors.subject}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <Box>\r\n                      <Typography variant=\"subtitle2\" gutterBottom>\r\n                        Project Type (Optional)\r\n                      </Typography>\r\n                      <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" gap={1}>\r\n                        {projectTypes.map((type) => (\r\n                          <Chip\r\n                            key={type}\r\n                            label={type}\r\n                            onClick={() => setFormData(prev => ({ \r\n                              ...prev, \r\n                              projectType: prev.projectType === type ? '' : type \r\n                            }))}\r\n                            color={formData.projectType === type ? \"primary\" : \"default\"}\r\n                            variant={formData.projectType === type ? \"filled\" : \"outlined\"}\r\n                            clickable\r\n                          />\r\n                        ))}\r\n                      </Stack>\r\n                    </Box>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Message\"\r\n                      multiline\r\n                      rows={4}\r\n                      value={formData.message}\r\n                      onChange={handleInputChange('message')}\r\n                      error={!!errors.message}\r\n                      helperText={errors.message || `${formData.message.length}/1000 characters`}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      size=\"large\"\r\n                      disabled={isSubmitting}\r\n                      startIcon={isSubmitting ? <CircularProgress size={20} /> : <SendIcon />}\r\n                      sx={{\r\n                        py: 1.5,\r\n                        px: 4,\r\n                        borderRadius: 2,\r\n                        textTransform: 'none',\r\n                        fontSize: '1.1rem'\r\n                      }}\r\n                    >\r\n                      {isSubmitting ? 'Sending...' : 'Send Message'}\r\n                    </Button>\r\n                  </Stack>\r\n                </Box>\r\n\r\n                {!isConfigured && (\r\n                  <Alert severity=\"info\" sx={{ mt: 3 }}>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Demo Mode:</strong> The form is fully functional but in demo mode. \r\n                      For real inquiries, please use the contact information provided.\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n              </CardContent>\r\n            </ContactCard>\r\n          </Box>\r\n\r\n          {/* Contact Information */}\r\n          <Box sx={{ flex: { xs: 1, md: '5' } }}>\r\n            <Stack spacing={3}>\r\n              <Typography variant=\"h4\" gutterBottom color=\"primary\">\r\n                Contact Information\r\n              </Typography>\r\n              \r\n              {contactInfo.map((info, index) => (\r\n                <motion.div\r\n                  key={info.label}\r\n                  initial={{ opacity: 0, x: 20 }}\r\n                  animate={{ opacity: 1, x: 0 }}\r\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\r\n                >                  <ContactInfoCard\r\n                    sx={{\r\n                      textDecoration: 'none',\r\n                      color: 'inherit',\r\n                      cursor: info.href ? 'pointer' : 'default'\r\n                    }}\r\n                    onClick={info.href ? () => window.open(info.href!, info.href!.startsWith('http') ? '_blank' : '_self') : undefined}\r\n                  >\r\n                    <Box sx={{ color: 'primary.main' }}>\r\n                      {info.icon}\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                        {info.label}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {info.value}\r\n                      </Typography>\r\n                    </Box>\r\n                  </ContactInfoCard>\r\n                </motion.div>\r\n              ))}\r\n\r\n              <Divider sx={{ my: 2 }} />\r\n                <Box>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Response Time\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  I typically respond to inquiries within 24-48 hours. For urgent matters, \r\n                  please feel free to reach out via phone or LinkedIn.\r\n                </Typography>\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n        </Box>\r\n      </motion.div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Contact;"],"names":["isEmailJSConfigured","validateForm","formData","errors","ContactCard","styled","Card","theme","ContactInfoCard","Paper","projectTypes","Contact","setFormData","useState","setErrors","isSubmitting","setIsSubmitting","showToast","useToast","isConfigured","handleInputChange","field","event","value","prev","handleSubmit","validation","resolve","error","contactInfo","EmailIcon","PhoneIcon","LinkedInIcon","GitHubIcon","LocationOnIcon","jsx","Container","jsxs","motion","Box","Typography","GradientText","Chip","ErrorIcon","CardContent","Stack","TextField","type","Button","CircularProgress","SendIcon","Alert","info","index","Divider"],"mappings":"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"}